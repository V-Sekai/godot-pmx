// Copyright (c) 2022 K. S. Ernest (iFire) Lee
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// https://gist.github.com/hakanai/d442724ac3728c1b50e50f7d1df65e1b

pri status "#not a pmx file"

pub struct parser?(
	val : base.u32,
)

pub func parser.parse?(src: base.io_reader) {
	var c : base.u8
    this.val = 0
    c = args.src.read_u8?()
    if c <> 0x50 {
        return "#not a pmx file"
    }
    c = args.src.read_u8?()
    if c <> 0x4D {
        return "#not a pmx file"
    }
    c = args.src.read_u8?()
    if c <> 0x58 {
        return "#not a pmx file"
    }
    c = args.src.read_u8?()
    if c <> 0x20 {
        return "#not a pmx file"
    }
    this.val = 1
    return ok
}

pub func parser.value() base.u32 {
	return this.val
}
